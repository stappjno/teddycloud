/* tslint:disable */
/* eslint-disable */
/**
 * TeddyCloud API
 * OpenAPI specification for TeddyCloud Backend API
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Errors,
  Status,
} from '../models';
import {
    ErrorsFromJSON,
    ErrorsToJSON,
    StatusFromJSON,
    StatusToJSON,
} from '../models';

/**
 * 
 */
export class GenericApi extends runtime.BaseAPI {

    /**
     * Check server status
     */
    async pingGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/ping`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatusFromJSON(jsonValue));
    }

    /**
     * Check server status
     */
    async pingGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status> {
        const response = await this.pingGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * CORS preflight request
     */
    async rootOptionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/`,
            method: 'OPTIONS',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * CORS preflight request
     */
    async rootOptions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.rootOptionsRaw(initOverrides);
    }

}
