/* tslint:disable */
/* eslint-disable */
/**
 * TeddyCloud API
 * OpenAPI specification for TeddyCloud Backend API
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Errors,
  StatsItem,
  StatsList,
} from '../models';
import {
    ErrorsFromJSON,
    ErrorsToJSON,
    StatsItemFromJSON,
    StatsItemToJSON,
    StatsListFromJSON,
    StatsListToJSON,
} from '../models';

export interface StatsIdGetRequest {
    id: string;
}

/**
 * 
 */
export class TeddyCloudApi extends runtime.BaseAPI {

    /**
     * Load all available stats.
     */
    async statsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatsList>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/stats`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatsListFromJSON(jsonValue));
    }

    /**
     * Load all available stats.
     */
    async statsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatsList> {
        const response = await this.statsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Load a specific stats item.
     */
    async statsIdGetRaw(requestParameters: StatsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatsItem>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling statsIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/stats/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatsItemFromJSON(jsonValue));
    }

    /**
     * Load a specific stats item.
     */
    async statsIdGet(requestParameters: StatsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatsItem> {
        const response = await this.statsIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
